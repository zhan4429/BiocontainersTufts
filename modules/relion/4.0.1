#%Module -*- tcl -*-
# The MIT License (MIT)
# Copyright (c) 2023 Tufts University

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

module-whatis   "Description:  RELION (for REgularised LIkelihood OptimisatioN) is a stand-alone computer program for Maximum A Posteriori refinement of (multiple) 3D reconstructions or 2D class averages in cryo-electron microscopy. It is developed in the research group of Sjors Scheres at the MRC Laboratory of Molecular Biology."
module-whatis   "Home page:    https://github.com/3dem/relion"
module-whatis "Commands: MotionCor2,ctffind,ctffind_plot_results.sh,relion,relion_align_symmetry,relion_autopick,relion_autopick_mpi,relion_backproject_2d,relion_batchrun,relion_batchrun_mpi,relion_class_ranker,relion_class_ranker.py,relion_class_ranker_default_model.pt,relion_convert_star,relion_convert_to_tiff,relion_convert_to_tiff_mpi,relion_ctf_mask_test,relion_ctf_refine,relion_ctf_refine_mpi,relion_ctf_toolbox,relion_delete_blobs_2d,relion_demodulate,relion_display,relion_estimate_gain,relion_external_reconstruct,relion_find_tiltpairs,relion_flex_analyse,relion_flex_analyse_mpi,relion_helix_inimodel2d,relion_helix_toolbox,relion_helix_vote_classes,relion_image_handler,relion_import,relion_it.py,relion_localsym,relion_localsym_mpi,relion_manualpick,relion_mask_create,relion_merge_particles,relion_motion_refine,relion_motion_refine_mpi,relion_mrc2vtk,relion_particle_reposition,relion_particle_select,relion_particle_subtract,relion_particle_subtract_mpi,relion_particle_symmetry_expand,relion_pipeliner,relion_plot_delocalisation,relion_postprocess,relion_postprocess_mpi,relion_prepare_subtomo,relion_preprocess,relion_preprocess_mpi,relion_project,relion_qsub.csh,relion_reconstruct,relion_reconstruct_mpi,relion_refine,relion_refine_mpi,relion_run_ctffind,relion_run_ctffind_mpi,relion_run_motioncorr,relion_run_motioncorr_mpi,relion_schemegui.py,relion_schemer,relion_stack_create,relion_star_datablock_ctfdat,relion_star_datablock_singlefiles,relion_star_datablock_stack,relion_star_handler,relion_star_loopheader,relion_star_plottable,relion_star_printtable,relion_tiltpair_plot,relion_tomo_Wiener_divide,relion_tomo_add_spheres,relion_tomo_align,relion_tomo_align_mpi,relion_tomo_bin_stack,relion_tomo_catalogue_tomos,relion_tomo_compute_FCC,relion_tomo_convert_projections,relion_tomo_dark_erase,relion_tomo_delete_blobs,relion_tomo_discover_motif,relion_tomo_find_fiducials,relion_tomo_find_lattice,relion_tomo_fit_bfactors,relion_tomo_fit_blobs_3d,relion_tomo_import_particles,relion_tomo_import_tomograms,relion_tomo_local_particle_refine,relion_tomo_make_optimisation_set,relion_tomo_make_reference,relion_tomo_powspec,relion_tomo_predict_tilt_series,relion_tomo_reconstruct_particle,relion_tomo_reconstruct_particle_mpi,relion_tomo_reconstruct_tomogram,relion_tomo_refine_ctf,relion_tomo_refine_ctf_mpi,relion_tomo_refine_mag,relion_tomo_sample_manifold,relion_tomo_split_optics,relion_tomo_subtomo,relion_tomo_subtomo_mpi,relion_tomo_taper,relion_tomo_template_pick,relion_tomo_test,relion_tomo_tomo_ctf"

set pkg relion 
set ver 4.0.1

proc ModulesHelp { } {
  puts stderr "\tThis module adds relion v4.0.1 to the environment.  It runs as a container under singularity"
}

#
# prepend-path and set SINGULARITY_BIND
#
prepend-path PATH            /cluster/tufts/biocontainers/tools/relion/4.0.1/bin
prepend-path --delim=, SINGULARITY_BIND /cluster/tufts

#
# set environment variable
#


#
# list conflict modules that cannot be loaded together
#
set conflicts_modules {relion}
foreach a_conflict $conflicts_modules {
  conflict $a_conflict
}

#
# appended log section
# 

if {[module-info mode "load"]} {
  global env
  if {[info exists env(USER)]} {
    set the_user [lindex [array get env USER] 1]
  } else {
    set the_user "foo"
  }
  system [concat "logger environment-modules" [module-info name] $the_user ]
}

set additional_prereqs {"singularity"}
if {[module-info mode "load"]} {
  foreach a_module $additional_prereqs {
    if {![is-loaded $a_module]} {
      module load $a_module
    }
  }
}
